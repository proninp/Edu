/*
 * A coloured triangle is created from a row of colours, each of which is red, green or blue.
 * Successive rows, each containing one fewer colour than the last, are generated by considering
 * the two touching colours in the previous row. If these colours are identical, the same colour
 * is used in the new row. If they are different, the missing colour is used in the new row.
 * This is continued until the final row, with only a single colour, is generated.
 * R R G B R G B B
 * R B R G B R B
 *  G G B R G G
 *   G R G B G
 *    B B R R
 *     B G R
 *      R B
 *       G
 */
package main.java.com.codewars.kyu7;

public class ColouredTriangles {
    public static char triangle(final String row) {
        char[] chars = row.toCharArray();
        while (chars.length > 1) {
            char[] sub = new char[chars.length - 1];
            for (int i = 0; i < sub.length; i++) {
                if (chars[i] == chars[i + 1])
                   sub[i] = chars[i];
                else {
                    String colors = Character.toString(chars[i]) + chars[i + 1];
                    if (!colors.contains("R"))
                        sub[i] = 'R';
                    if (!colors.contains("G"))
                        sub[i] = 'G';
                    if (!colors.contains("B"))
                        sub[i] = 'B';
                }
            }
            chars = sub;
        }
        return chars[0];
    }
    public static char triangle2(final String row) {
        char[] chars = row.toCharArray();
        if (chars.length == 1)
            return chars[0];
        StringBuilder sub = new StringBuilder(chars.length - 1);
        for (int i = 0; i < chars.length - 1; i++) {
            if (chars[i] == chars[i + 1])
                sub.append(chars[i]);
            else {
                String colors = Character.toString(chars[i]) + chars[i + 1];
                if (!colors.contains("R"))
                    sub.append('R');
                if (!colors.contains("G"))
                    sub.append('G');
                if (!colors.contains("B"))
                    sub.append('B');
            }
        }
        return triangle2(sub.toString());
    }
}
